{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachines_SalesVM_name": {
            "defaultValue": "SalesVM",
            "type": "String"
        },
        "virtualNetworks_SalesVNet_name": {
            "defaultValue": "SalesVNet",
            "type": "String"
        },
        "virtualMachines_ResearchVM_name": {
            "defaultValue": "ResearchVM",
            "type": "String"
        },
        "virtualMachines_MarketingVM_name": {
            "defaultValue": "MarketingVM",
            "type": "String"
        },
        "virtualNetworks_ResearchVNet_name": {
            "defaultValue": "ResearchVNet",
            "type": "String"
        },
        "virtualNetworks_MarketingVNet_name": {
            "defaultValue": "MarketingVNet",
            "type": "String"
        },
        "networkInterfaces_SalesVMVMNic_name": {
            "defaultValue": "SalesVMVMNic",
            "type": "String"
        },
        "networkSecurityGroups_SalesVMNSG_name": {
            "defaultValue": "SalesVMNSG",
            "type": "String"
        },
        "networkInterfaces_ResearchVMVMNic_name": {
            "defaultValue": "ResearchVMVMNic",
            "type": "String"
        },
        "publicIPAddresses_SalesVMPublicIP_name": {
            "defaultValue": "SalesVMPublicIP",
            "type": "String"
        },
        "networkInterfaces_MarketingVMVMNic_name": {
            "defaultValue": "MarketingVMVMNic",
            "type": "String"
        },
        "networkSecurityGroups_ResearchVMNSG_name": {
            "defaultValue": "ResearchVMNSG",
            "type": "String"
        },
        "networkSecurityGroups_MarketingVMNSG_name": {
            "defaultValue": "MarketingVMNSG",
            "type": "String"
        },
        "publicIPAddresses_ResearchVMPublicIP_name": {
            "defaultValue": "ResearchVMPublicIP",
            "type": "String"
        },
        "publicIPAddresses_MarketingVMPublicIP_name": {
            "defaultValue": "MarketingVMPublicIP",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-03-01",
            "name": "[parameters('networkSecurityGroups_MarketingVMNSG_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "id": "[concat(resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_MarketingVMNSG_name')), '/securityRules/default-allow-ssh')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-03-01",
            "name": "[parameters('networkSecurityGroups_ResearchVMNSG_name')]",
            "location": "westus",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "id": "[concat(resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ResearchVMNSG_name')), '/securityRules/default-allow-ssh')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-03-01",
            "name": "[parameters('networkSecurityGroups_SalesVMNSG_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "id": "[concat(resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_SalesVMNSG_name')), '/securityRules/default-allow-ssh')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-03-01",
            "name": "[parameters('publicIPAddresses_MarketingVMPublicIP_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "4.157.241.215",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-03-01",
            "name": "[parameters('publicIPAddresses_ResearchVMPublicIP_name')]",
            "location": "westus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "13.88.116.80",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-03-01",
            "name": "[parameters('publicIPAddresses_SalesVMPublicIP_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "4.157.247.119",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-07-01",
            "name": "[parameters('virtualMachines_MarketingVM_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_MarketingVMVMNic_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "0001-com-ubuntu-server-jammy",
                        "sku": "22_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_MarketingVM_name'), '_disk1_e30c733eb7da4848ab33da7d53d456ee')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_MarketingVM_name'), '_disk1_e30c733eb7da4848ab33da7d53d456ee'))]"
                        },
                        "deleteOption": "Detach",
                        "diskSizeGB": 30
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_MarketingVM_name')]",
                    "adminUsername": "azureuser",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "securityProfile": {
                    "uefiSettings": {
                        "secureBootEnabled": true,
                        "vTpmEnabled": true
                    },
                    "securityType": "TrustedLaunch"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_MarketingVMVMNic_name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-07-01",
            "name": "[parameters('virtualMachines_ResearchVM_name')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ResearchVMVMNic_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "0001-com-ubuntu-server-jammy",
                        "sku": "22_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_ResearchVM_name'), '_disk1_34c86bf647e1433ebb1a1c6573b5bacb')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_ResearchVM_name'), '_disk1_34c86bf647e1433ebb1a1c6573b5bacb'))]"
                        },
                        "deleteOption": "Detach",
                        "diskSizeGB": 30
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_ResearchVM_name')]",
                    "adminUsername": "azureuser",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "securityProfile": {
                    "uefiSettings": {
                        "secureBootEnabled": true,
                        "vTpmEnabled": true
                    },
                    "securityType": "TrustedLaunch"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ResearchVMVMNic_name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-07-01",
            "name": "[parameters('virtualMachines_SalesVM_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_SalesVMVMNic_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "0001-com-ubuntu-server-jammy",
                        "sku": "22_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_SalesVM_name'), '_disk1_ca3271e3524f42b2acfc8bb4b2f5490a')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_SalesVM_name'), '_disk1_ca3271e3524f42b2acfc8bb4b2f5490a'))]"
                        },
                        "deleteOption": "Detach",
                        "diskSizeGB": 30
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_SalesVM_name')]",
                    "adminUsername": "azureuser",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "securityProfile": {
                    "uefiSettings": {
                        "secureBootEnabled": true,
                        "vTpmEnabled": true
                    },
                    "securityType": "TrustedLaunch"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_SalesVMVMNic_name'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-03-01",
            "name": "[parameters('virtualNetworks_ResearchVNet_name')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_MarketingVNet_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.3.0.0/16"
                    ]
                },
                "privateEndpointVNetPolicies": "Disabled",
                "subnets": [
                    {
                        "name": "Data",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ResearchVNet_name'), 'Data')]",
                        "properties": {
                            "addressPrefix": "10.3.1.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "[concat(parameters('virtualNetworks_ResearchVNet_name'), '-To-MarketingVNet')]",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_ResearchVNet_name'), concat(parameters('virtualNetworks_ResearchVNet_name'), '-To-MarketingVNet'))]",
                        "properties": {
                            "peeringState": "Connected",
                            "peeringSyncLevel": "FullyInSync",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_MarketingVNet_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "doNotVerifyRemoteGateways": false,
                            "peerCompleteVnets": true,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.2.0.0/16"
                                ]
                            },
                            "remoteVirtualNetworkAddressSpace": {
                                "addressPrefixes": [
                                    "10.2.0.0/16"
                                ]
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-03-01",
            "name": "[parameters('virtualNetworks_SalesVNet_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_MarketingVNet_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                },
                "privateEndpointVNetPolicies": "Disabled",
                "subnets": [
                    {
                        "name": "Apps",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_SalesVNet_name'), 'Apps')]",
                        "properties": {
                            "addressPrefix": "10.1.1.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "[concat(parameters('virtualNetworks_SalesVNet_name'), '-To-MarketingVNet')]",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_SalesVNet_name'), concat(parameters('virtualNetworks_SalesVNet_name'), '-To-MarketingVNet'))]",
                        "properties": {
                            "peeringState": "Connected",
                            "peeringSyncLevel": "FullyInSync",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_MarketingVNet_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "doNotVerifyRemoteGateways": false,
                            "peerCompleteVnets": true,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.2.0.0/16"
                                ]
                            },
                            "remoteVirtualNetworkAddressSpace": {
                                "addressPrefixes": [
                                    "10.2.0.0/16"
                                ]
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualNetworks_MarketingVNet_name'), '/Apps')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_MarketingVNet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.2.1.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualNetworks_SalesVNet_name'), '/Apps')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SalesVNet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.1.1.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualNetworks_ResearchVNet_name'), '/Data')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_ResearchVNet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.3.1.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-03-01",
            "name": "[parameters('virtualNetworks_MarketingVNet_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SalesVNet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_ResearchVNet_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                },
                "privateEndpointVNetPolicies": "Disabled",
                "subnets": [
                    {
                        "name": "Apps",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_MarketingVNet_name'), 'Apps')]",
                        "properties": {
                            "addressPrefix": "10.2.1.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "[concat(parameters('virtualNetworks_MarketingVNet_name'), '-To-SalesVNet')]",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_MarketingVNet_name'), concat(parameters('virtualNetworks_MarketingVNet_name'), '-To-SalesVNet'))]",
                        "properties": {
                            "peeringState": "Connected",
                            "peeringSyncLevel": "FullyInSync",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SalesVNet_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "doNotVerifyRemoteGateways": false,
                            "peerCompleteVnets": true,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.1.0.0/16"
                                ]
                            },
                            "remoteVirtualNetworkAddressSpace": {
                                "addressPrefixes": [
                                    "10.1.0.0/16"
                                ]
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    },
                    {
                        "name": "[concat(parameters('virtualNetworks_MarketingVNet_name'), '-To-ResearchVNet')]",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_MarketingVNet_name'), concat(parameters('virtualNetworks_MarketingVNet_name'), '-To-ResearchVNet'))]",
                        "properties": {
                            "peeringState": "Connected",
                            "peeringSyncLevel": "FullyInSync",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_ResearchVNet_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "doNotVerifyRemoteGateways": false,
                            "peerCompleteVnets": true,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.3.0.0/16"
                                ]
                            },
                            "remoteVirtualNetworkAddressSpace": {
                                "addressPrefixes": [
                                    "10.3.0.0/16"
                                ]
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualNetworks_MarketingVNet_name'), '/', parameters('virtualNetworks_MarketingVNet_name'), '-To-ResearchVNet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_MarketingVNet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_ResearchVNet_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_ResearchVNet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "peerCompleteVnets": true,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.3.0.0/16"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.3.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualNetworks_MarketingVNet_name'), '/', parameters('virtualNetworks_MarketingVNet_name'), '-To-SalesVNet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_MarketingVNet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SalesVNet_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SalesVNet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "peerCompleteVnets": true,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualNetworks_ResearchVNet_name'), '/', parameters('virtualNetworks_ResearchVNet_name'), '-To-MarketingVNet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_ResearchVNet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_MarketingVNet_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_MarketingVNet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "peerCompleteVnets": true,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualNetworks_SalesVNet_name'), '/', parameters('virtualNetworks_SalesVNet_name'), '-To-MarketingVNet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_SalesVNet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_MarketingVNet_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_MarketingVNet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "peerCompleteVnets": true,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-03-01",
            "name": "[parameters('networkInterfaces_MarketingVMVMNic_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_MarketingVMPublicIP_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_MarketingVNet_name'), 'Apps')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_MarketingVMNSG_name'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigMarketingVM",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_MarketingVMVMNic_name')), '/ipConfigurations/ipconfigMarketingVM')]",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAddress": "10.2.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_MarketingVMPublicIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_MarketingVNet_name'), 'Apps')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_MarketingVMNSG_name'))]"
                },
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-03-01",
            "name": "[parameters('networkInterfaces_ResearchVMVMNic_name')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ResearchVMPublicIP_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ResearchVNet_name'), 'Data')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ResearchVMNSG_name'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigResearchVM",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ResearchVMVMNic_name')), '/ipConfigurations/ipconfigResearchVM')]",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAddress": "10.3.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_ResearchVMPublicIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_ResearchVNet_name'), 'Data')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_ResearchVMNSG_name'))]"
                },
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-03-01",
            "name": "[parameters('networkInterfaces_SalesVMVMNic_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_SalesVMPublicIP_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_SalesVNet_name'), 'Apps')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_SalesVMNSG_name'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfigSalesVM",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_SalesVMVMNic_name')), '/ipConfigurations/ipconfigSalesVM')]",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAddress": "10.1.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_SalesVMPublicIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_SalesVNet_name'), 'Apps')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_SalesVMNSG_name'))]"
                },
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        }
    ]
}

//az network vnet create --resource-group rg_eastus_172407_1_173896994620 --name SalesVNet --address-prefixes 10.1.0.0/16 --subnet-name Apps --subnet-prefixes 10.1.1.0/24 --location eastus



//az network vnet create --resource-group rg_eastus_172407_1_173896994620 --name MarketingVNet --address-prefixes 10.2.0.0/16 --subnet-name Apps --subnet-prefixes 10.2.1.0/24 --location eastus


//az network vnet create --resource-group rg_eastus_172407_1_173896994620 --name ResearchVNet --address-prefixes 10.3.0.0/16 --subnet-name Data --subnet-prefixes 10.3.1.0/24 --location westus

//az network vnet list --query "[?contains(provisioningState, 'Succeeded')]" --output table


//az vm create --resource-group rg_eastus_172407_1_173896994620 --no-wait --name SalesVM --size Standard_B2s --location eastus --vnet-name SalesVNet --subnet Apps --image Ubuntu2204 --admin-username azureuser --admin-password p@ssw0rd123456


//az vm create --resource-group rg_eastus_172407_1_173896994620 --no-wait --name MarketingVM --size Standard_B2s --location eastus --vnet-name MarketingVNet --subnet Apps --image Ubuntu2204 --admin-username azureuser --admin-password p@ssw0rd123456


//az vm create --resource-group rg_eastus_172407_1_173896994620 --no-wait --name ResearchVM --size Standard_B2s --location westus --vnet-name ResearchVNet --subnet Data --image Ubuntu2204 --admin-username azureuser --admin-password p@ssw0rd123456


//watch -d -n 5 "az vm list \
  //  --resource-group rg_eastus_172407_1_173896994620 \
  //--show-details \
//--query '[*].{Name:name, ProvisioningState:provisioningState, PowerState:powerState}' \
   // --output table"
//(After this command press ctrl + C to end and continue process)


//az network vnet peering create --name SalesVNet-To-MarketingVNet --remote-vnet MarketingVNet --resource-group rg_eastus_172407_1_173896994620 --vnet-name SalesVNet --allow-vnet-access
//(Sales Vnet to marketing vnet)


//az network vnet peering create --name MarketingVNet-To-SalesVNet --remote-vnet SalesVNet --resource-group rg_eastus_172407_1_173896994620 --vnet-name MarketingVNet --allow-vnet-access
//(Reciprocal from marketing to Sales)


//az network vnet peering create --name MarketingVNet-To-ResearchVNet --remote-vnet ResearchVNet --resource-group  rg_eastus_172407_1_173896994620 --vnet-name MarketingVNet --allow-vnet-access
//(marketing to ResearchNet)


//az network vnet peering create --name ResearchVNet-To-MarketingVNet --remote-vnet MarketingVNet --resource-group rg_eastus_172407_1_173896994620 --vnet-name ResearchVNet --allow-vnet-access
//(Reciprocal connection between Research and Marketing Vnet)


//az network vnet peering list --resource-group rg_eastus_172407_1_173896994620 --vnet-name SalesVNet --query "[].{Name:name, Resource:resourceGroup, PeeringState:peeringState, AllowVnetAccess:allowVirtualNetworkAccess}" --output table
//(To check connection between Sales Vnet and marketing vnet)


//az network vnet peering list --resource-group rg_eastus_172407_1_173896994620 --vnet-name ResearchVNet --query "[].{Name:name, Resource:resourceGroup, PeeringState:peeringState, AllowVnetAccess:allowVirtualNetworkAccess}" --output table
//(To verify connection between Research Vnet and Marketing Vnet)

//az network vnet peering list --resource-group rg_eastus_172407_1_173896994620 --vnet-name MarketingVNet --query "[].{Name:name, Resource:resourceGroup, PeeringState:peeringState, AllowVnetAccess:allowVirtualNetworkAccess}" --output table
//(Check peering connection for marketing vnet virtual network)

//az network nic show-effective-route-table --resource-group rg_eastus_172407_1_173896994620 --name SalesVMVMNic --output table
//(Run this command to look at the routes that apply to the sales VM

//az network nic show-effective-route-table --resource-group rg_eastus_172407_1_173896994620 --name MarketingVMVMNic --output table
//(Run this command to look at the routes that apply to the marketing VM)

//az network nic show-effective-route-table --resource-group rg_eastus_172407_1_173896994620 --name ResearchVMVMNic --output table
//(Run this command to look at the routes that apply to the Research VM)


//az vm list --resource-group rg_eastus_172407_1_173896994620 --query "[*].{Name:name, PrivateIP:privateIps, PublicIP:publicIps}" --show-details --output table
//(Run this command to see the connect to see the list of your VMs through SSH)

//ssh -o StrictHostKeyChecking=no azureuser@4.157.247.119
//(Run this command to connect to your Sales Vm through SSH, you will be required to enter password)


//ssh -o StrictHostKeyChecking=no azureuser@4.157.241.215
//(While in  the sales VM, enter the command above to SSH into Research VM)


//ssh -o StrictHostKeyChecking=no azureuser@4.157.241.215
//(Connect through SSH to marketing VM)


//ssh -o StrictHostKeyChecking=no azureuser@4.157.247.119
//(While in marketing VM ,ssh into Sales VM)











